<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-4.2.xsd">

    <!-- disable csrf for SOAP api; important: use before rest of security:http implementation to be visible first -->
    <security:http security="none" pattern="/soap/api"/>
    <!-- use-expressions="true" need to be set to use isAuthenticated() in jsp; access need to have hasRole()
    https://stackoverflow.com/questions/11594104/spring-security-no-visible-websecurityexpressionhandler-instance-could-be-foun-->
    <security:http auto-config="true" use-expressions="true" authentication-manager-ref="authenticationManager">
        <security:intercept-url pattern="/cats/**" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/upload/**" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/" access="permitAll"/>
        <security:intercept-url pattern="/resources/**" access="permitAll"/>
        <security:intercept-url pattern="/resources/" access="permitAll"/>
        <security:logout logout-success-url="/" logout-url="/logout" delete-cookies="JSESSIONID"/>
        <security:form-login login-page="/login"
                             authentication-failure-url="/login?error=1"
                             username-parameter="login"
                             password-parameter="password"/>
        <security:csrf/>  <!--włączamy zabezpieczenie przed csrf -->
    </security:http>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider>
            <security:password-encoder ref="passwordEncoder"/>
            <security:jdbc-user-service data-source-ref="dataSource"
                                        users-by-username-query="${db.security.users.by.username.query}"
                                        authorities-by-username-query="${db.security.authorities.by.username.query}"/>
        </security:authentication-provider>
    </security:authentication-manager>
    <!-- gives permission to use @Secured -->
    <security:global-method-security secured-annotations="enabled" pre-post-annotations="enabled"/>

    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <constructor-arg name="strength" value="11"/>
    </bean>

    <bean id="authenticationSuccessHandler"
          class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
        <property name="useReferer" value="true"/>
    </bean>
</beans>