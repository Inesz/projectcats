<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-4.2.xsd">

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://remotemysql.com:3306/GyV5uYepJV"/>
        <property name="username" value="GyV5uYepJV"/>
        <property name="password" value="Gf5nszJBmk"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.cats"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="false"/>
                <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">validate</prop>
            </props>
        </property>
    </bean>
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- use-expressions="true" need to be set to use isAuthenticated() in jsp; access need to have hasRole()
    https://stackoverflow.com/questions/11594104/spring-security-no-visible-websecurityexpressionhandler-instance-could-be-foun-->
    <security:http auto-config="true" use-expressions="true" authentication-manager-ref="authenticationManager">
        <security:intercept-url pattern="/cats/**" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/upload/**" access="hasRole('ROLE_ADMIN')"/>
        <security:logout logout-success-url="/" logout-url="/logout" delete-cookies="JSESSIONID"/>
        <security:form-login login-page="/login"
                             authentication-failure-url="/login?error=1"
                             username-parameter="login"
                             password-parameter="password"/>
        <security:csrf/>  <!--wÅ‚Ä…czamy zabezpieczenie przed csrf -->
    </security:http>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider>
            <security:password-encoder ref="passwordEncoder"/>
            <security:jdbc-user-service data-source-ref="dataSource"
                                        users-by-username-query="SELECT login, password, 'true' FROM Users WHERE login=?"
                                        authorities-by-username-query="select u.login, r.role from Roles r inner JOIN UserRole ur on ur.roleId=r.id and valid=true inner join Users u on u.id=ur.userId WHERE u.login = ?"/>
        </security:authentication-provider>
    </security:authentication-manager>
    <!-- gives permission to use @Secured -->
    <security:global-method-security secured-annotations="enabled" pre-post-annotations="enabled"/>

    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <constructor-arg name="strength" value="11"/>
    </bean>

    <bean id="authenticationSuccessHandler"
          class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
        <property name="useReferer" value="true"/>
    </bean>

    <bean id="filterMultipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="10000000"/>
    </bean>

</beans>