<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-4.2.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-4.3.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://cxf.apache.org/jaxws
       http://cxf.apache.org/schemas/jaxws.xsd">

    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>

    <util:properties id="cloud" location="classpath:properties/cloud.properties"/>
    <util:properties id="db" location="classpath:properties/db.properties, classpath:properties/db_security.properties"/>
    <context:property-placeholder properties-ref="cloud" ignore-unresolvable="true"/>
    <context:property-placeholder properties-ref="db" ignore-unresolvable="true"/>

    <bean id="dataSource" class="${db.dataSource}">
        <property name="driverClassName" value="${db.driverClassName}"/>
        <property name="url" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.cats"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="false"/>
                <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">validate</prop>
            </props>
        </property>
    </bean>
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- disable csrf for SOAP api; important: use before rest of security:http implementation to be visible first -->
    <security:http security="none" pattern="/soap/api"/>
    <!-- use-expressions="true" need to be set to use isAuthenticated() in jsp; access need to have hasRole()
    https://stackoverflow.com/questions/11594104/spring-security-no-visible-websecurityexpressionhandler-instance-could-be-foun-->
    <security:http auto-config="true" use-expressions="true" authentication-manager-ref="authenticationManager">
        <security:intercept-url pattern="/cats/**" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/upload/**" access="hasRole('ROLE_ADMIN')"/>
        <security:intercept-url pattern="/" access="permitAll" />
        <security:intercept-url pattern="/resources/**" access="permitAll" />
        <security:intercept-url pattern="/resources/" access="permitAll" />
        <security:logout logout-success-url="/" logout-url="/logout" delete-cookies="JSESSIONID"/>
        <security:form-login login-page="/login"
                             authentication-failure-url="/login?error=1"
                             username-parameter="login"
                             password-parameter="password"/>
        <security:csrf/>  <!--wÅ‚Ä…czamy zabezpieczenie przed csrf -->
    </security:http>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider>
            <security:password-encoder ref="passwordEncoder"/>
            <security:jdbc-user-service data-source-ref="dataSource"
                                        users-by-username-query="${db.security.users.by.username.query}"
                                        authorities-by-username-query="${db.security.authorities.by.username.query}"/>
        </security:authentication-provider>
    </security:authentication-manager>
    <!-- gives permission to use @Secured -->
    <security:global-method-security secured-annotations="enabled" pre-post-annotations="enabled"/>

    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <constructor-arg name="strength" value="11"/>
    </bean>

    <bean id="authenticationSuccessHandler"
          class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
        <property name="useReferer" value="true"/>
    </bean>

    <bean id="filterMultipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="${cloud.max.file.size}"/>
    </bean>

    <jaxws:endpoint id="CatsSoapService" implementor="com.cats.serviceSOAP.CatsSOAPService" address="/api"/>
</beans>