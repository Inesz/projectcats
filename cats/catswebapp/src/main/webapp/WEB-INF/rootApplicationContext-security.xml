<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security-4.2.xsd">

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://remotemysql.com:3306/GyV5uYepJV"/>
        <property name="username" value="GyV5uYepJV"/>
        <property name="password" value="Gf5nszJBmk"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.cats"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="false"/>
                <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">validate</prop>
            </props>
        </property>
    </bean>
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <security:http auto-config="true" use-expressions="false" authentication-manager-ref="authenticationManager">
        <security:intercept-url pattern="/cats/**" access="ROLE_ADMIN"/>
        <security:logout logout-success-url="/" logout-url="/logout" delete-cookies="JSESSIONID" />
    </security:http>

    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider>
            <security:password-encoder ref="passwordEncoder"/>
            <security:user-service>
                <security:user name="admin2" password="$2a$11$WRZ/TAcbJa5xKcQzzVCNyu4kHzzYDky4zTDjaeOsLfc3rJNUK4Vki"
                               authorities="ROLE_ADMIN"/>
                <security:user name="user2" password="$2a$11$JttaPSYHQZwG4o3lA0cSXu19TSTjWO8wj6.0.leaRKyTUpQbXt5oy"
                               authorities="ROLE_USER"/>
            </security:user-service>
            <!-- using DB to get data
            - can be joined with user-service
            - strict values are needed: username, password, enabled / username, role -->
            <security:jdbc-user-service data-source-ref="dataSource"
                                        users-by-username-query=    "SELECT login, password, 'true' FROM Users WHERE login=?"
                                        authorities-by-username-query="select u.login, r.role from Roles r inner JOIN UserRole ur on ur.roleId=r.id and valid=true inner join Users u on u.id=ur.userId WHERE u.login = ?" />
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
        <constructor-arg name="strength" value="11"/>
    </bean>

    <bean id="authenticationSuccessHandler"
          class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
        <property name="useReferer" value="true"/>
    </bean>

</beans>