<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
http://www.springframework.org/schema/data/jpa
http://www.springframework.org/schema/data/jpa/spring-jpa-1.11.xsd">

    <context:component-scan base-package="com.cats">
        <!-- <context:exclude-filter type="assignable" expression="com.cats.SpringDataDAO"/>-->
    </context:component-scan><!-- automatyczna obsługa klas z adnotacjami w tym pakiecie -->

    <context:annotation-config/>
    <!-- To na przyszłość, pozwoli nam korzystać z adnotacji także w klasach, które byśmy skonfigurowali ręcznie -->

    <tx:annotation-driven/>

    <!-- jeśli context:component-scan nie działa prawidłowo - nie widzi klasy. Jeśli context:component-scan i deklaracja beana jednocześnie - błąd: niejednoznaczność deklaracji
    No qualifying bean of type 'com.cats.CatsDAO' available: expected single matching bean but found 2: catsDAO,CatsDAO
    <bean id = "CatsDAO" class = "com.cats.CatsDAO">
    </bean>-->

    <bean id="Cat" class="com.cats.Cat">
    </bean>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix">
            <value>/WEB-INF/views/</value>
        </property>
        <property name="suffix">
            <value>.jsp</value>
        </property>
    </bean>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://remotemysql.com:3306/GyV5uYepJV"/>
        <property name="username" value="GyV5uYepJV"/>
        <property name="password" value="Gf5nszJBmk"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="packagesToScan" value="com.cats"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
                <property name="showSql" value="false"/>
                <property name="databasePlatform" value="org.hibernate.dialect.MySQLDialect"/>
            </bean>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>
    </bean>
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <jpa:repositories base-package="com.cats" entity-manager-factory-ref="entityManagerFactory"
                      repository-impl-postfix="SpringDataDAO" transaction-manager-ref="transactionManager"/>
</beans>